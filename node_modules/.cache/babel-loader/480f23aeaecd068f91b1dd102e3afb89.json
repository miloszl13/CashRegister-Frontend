{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos.mihajlovic\\\\source\\\\repos\\\\CASHREGISTER\\\\CashRegister-Frontend\\\\src\\\\components\\\\Auth\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { billActions } from '../../store/billSlice';\nimport { useDispatch } from 'react-redux';\nimport { uiActions } from '../../store/uiSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const history = useHistory();\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const dispatch = useDispatch();\n  const authCtx = useContext(AuthContext);\n\n  async function GetUsersId(username) {\n    const response = await fetch(`https://localhost:7269/api/User/GetUsersId/${username}`);\n    const data = await response.json();\n    console.log(response);\n    console.log(data);\n    dispatch(billActions.setUserId(data));\n  }\n\n  async function Login(userCredsObj) {\n    //setNotificationObj({component:'ProductForm',status:'pending',title:'Sending',message:'Sending...'})\n    const credentials = JSON.stringify(userCredsObj);\n    console.log(credentials);\n    const response = await fetch('https://localhost:7269/api/User/login', {\n      method: 'POST',\n      body: credentials,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error('error');\n    }\n\n    const expirationTime = new Date(new Date().setHours(new Date().getHours() + 8));\n    authCtx.login(data, expirationTime.toISOString());\n    GetUsersId(userCredsObj.username);\n    const getUserResponse = await fetch('https://localhost:7269/api/User/GetUserByCredentials', {\n      method: 'POST',\n      body: credentials,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const getUserData = await getUserResponse.json();\n\n    if (getUserData.role === 'admin') {\n      history.replace('/admin');\n    } else if (getUserData.role === 'user') {\n      history.replace('/homepage');\n    } //history.replace('/homepage');\n    // dispatch(productActions.addProduct(productObj))\n    // setNotificationObj({component:'ProductForm',status:'success',title:'Success!',message:'Successfuly created product'})\n\n  } // const switchAuthModeHandler = () => {\n  //   setIsLogin((prevState) => !prevState);\n  // };\n\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredUsername = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n    // setIsLoading(true);\n\n    const credentials = {\n      username: enteredUsername,\n      password: enteredPassword\n    };\n    Login(credentials);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: usernameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"czuhCFGuz6BqOudRbJz31jgfOSk=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["useState","useRef","useContext","useHistory","AuthContext","classes","billActions","useDispatch","uiActions","LoginForm","history","usernameInputRef","passwordInputRef","dispatch","authCtx","GetUsersId","username","response","fetch","data","json","console","log","setUserId","Login","userCredsObj","credentials","JSON","stringify","method","body","headers","ok","Error","expirationTime","Date","setHours","getHours","login","toISOString","getUserResponse","getUserData","role","replace","submitHandler","event","preventDefault","enteredUsername","current","value","enteredPassword","password","auth","control","actions"],"sources":["C:/Users/milos.mihajlovic/source/repos/CASHREGISTER/CashRegister-Frontend/src/components/Auth/LoginForm.js"],"sourcesContent":["import { useState, useRef, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AuthForm.module.css';\r\nimport { billActions } from '../../store/billSlice';\r\nimport {useDispatch} from 'react-redux';\r\nimport { uiActions } from '../../store/uiSlice';\r\n\r\nconst LoginForm = () => {\r\n  const history = useHistory();\r\n  const usernameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const dispatch=useDispatch()\r\n  \r\n  const authCtx = useContext(AuthContext);\r\n\r\n  async function GetUsersId(username){\r\n    const response = await fetch(`https://localhost:7269/api/User/GetUsersId/${username}`);\r\n    const data = await response.json();\r\n    console.log(response)\r\n    console.log(data);\r\n    dispatch(billActions.setUserId(data))  \r\n  }\r\n\r\n  async function Login(userCredsObj) {\r\n    //setNotificationObj({component:'ProductForm',status:'pending',title:'Sending',message:'Sending...'})\r\n    const credentials=JSON.stringify(userCredsObj);\r\n    console.log(credentials)\r\n    const response = await fetch('https://localhost:7269/api/User/login', {\r\n      method: 'POST',\r\n      body: credentials,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept':'application/json'\r\n      }\r\n    });\r\n    const data=await response.json()\r\n    if (!response.ok) {\r\n      throw new Error('error');\r\n    }\r\n    const expirationTime = new Date(\r\n            new Date().setHours(new Date().getHours() + 8)\r\n          )\r\n    authCtx.login(data, expirationTime.toISOString());\r\n    GetUsersId(userCredsObj.username);\r\n\r\n\r\n\r\n    const getUserResponse = await fetch('https://localhost:7269/api/User/GetUserByCredentials', {\r\n      method: 'POST',\r\n      body: credentials,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const getUserData = await getUserResponse.json();\r\n\r\n    if(getUserData.role === 'admin'){\r\n      history.replace('/admin')\r\n    }\r\n    else if(getUserData.role === 'user'){\r\n      history.replace('/homepage')\r\n    }                                    \r\n    //history.replace('/homepage');\r\n    \r\n   // dispatch(productActions.addProduct(productObj))\r\n   // setNotificationObj({component:'ProductForm',status:'success',title:'Success!',message:'Successfuly created product'})\r\n  }\r\n\r\n  \r\n\r\n  // const switchAuthModeHandler = () => {\r\n  //   setIsLogin((prevState) => !prevState);\r\n  // };\r\n \r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    \r\n    // optional: Add validation\r\n \r\n    // setIsLoading(true);\r\n      const credentials={username:enteredUsername,password:enteredPassword}\r\n      Login(credentials);\r\n}\r\n return (\r\n    <section className={classes.auth}>\r\n      <h1>Login</h1> \r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='username'>Username</label>\r\n          <input type='text' id='username' ref={usernameInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input\r\n            type='password'\r\n            id='password'\r\n            ref={passwordInputRef}\r\n          />\r\n          </div>\r\n        \r\n        <div className={classes.actions}>\r\n            <button>Login</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}