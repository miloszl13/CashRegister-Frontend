{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos.mihajlovic\\\\source\\\\repos\\\\CASHREGISTER\\\\CashRegister-Frontend\\\\src\\\\components\\\\Product\\\\UpdateProductForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport classes from './ProductForm.module.css';\nimport Notification from \"../UI/Notification\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productActions } from \"../../store/productSlice\";\nimport useInput from \"../../hooks/use-input\"; //validation form input methods\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isNotLessThanOrEqualToZero = value => value > 0;\n\nconst ProductForm = props => {\n  _s();\n\n  const selectedProductId = useSelector(state => state.products.selectedProductId);\n  const [notificationObj, setNotificationObj] = useState({\n    component: '',\n    status: '',\n    title: '',\n    message: ''\n  });\n  const dispatch = useDispatch();\n  const {\n    value: productNameValue,\n    isValid: productNameIsValid,\n    hasError: productNameHasError,\n    valueChangeHandler: productNameChangeHandler,\n    inputBlurHandler: productNameBlurHandler,\n    reset: resetProductName\n  } = useInput(isNotEmpty);\n  const {\n    value: productCostValue,\n    isValid: productCostIsValid,\n    hasError: productCostHasErrors,\n    valueChangeHandler: productCostChangeHandler,\n    inputBlurHandler: productCostBlurHandler,\n    reset: resetProductCost\n  } = useInput(isNotLessThanOrEqualToZero);\n  let formIsValid = false;\n\n  if (productNameIsValid && productCostIsValid) {\n    formIsValid = true;\n  } //\n\n\n  async function UpdateProduct(productObj) {\n    const token = localStorage.getItem('token');\n    setNotificationObj({\n      component: 'UpdateProductForm',\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending...'\n    });\n    const product = JSON.stringify(productObj);\n    const response = await fetch('https://localhost:7269/api/Product/UpdateProduct', {\n      method: 'PUT',\n      body: product,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.errorMessage);\n    }\n\n    dispatch(productActions.deleteProduct(productObj.product_id));\n    dispatch(productActions.addProduct(productObj));\n    setNotificationObj({\n      component: 'UpdateProductForm',\n      status: 'success',\n      title: 'Success!',\n      message: 'Product is successfuly updated'\n    });\n  }\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    const productObj = {\n      product_id: selectedProductId,\n      name: productNameValue,\n      cost: productCostValue\n    };\n    console.log(productObj);\n    UpdateProduct(productObj).catch(error => {\n      setNotificationObj({\n        component: 'UpdateProductForm',\n        status: 'error',\n        title: 'Error!',\n        message: error.message\n      });\n    }); //reset inputs to initial\n\n    resetProductName();\n    resetProductCost();\n    dispatch(productActions.resetSelectedProductId());\n  }; //clear notification\n\n\n  const clearNotificationHandler = () => {\n    setNotificationObj({\n      component: '',\n      status: '',\n      title: '',\n      message: ''\n    });\n  }; //\n\n\n  const productNameClasses = productNameHasError ? 'form-control invalid' : 'form-control';\n  const productCostClasses = productCostHasErrors ? 'form-control invalid' : 'form-control'; //\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      onFocus: clearNotificationHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: productNameClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Product Name : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: productNameValue,\n            onChange: productNameChangeHandler,\n            onBlur: productNameBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), productNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please enter a product name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: productCostClasses,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cost\",\n            children: \"Product cost : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"cost\",\n            value: productCostValue,\n            onChange: productCostChangeHandler,\n            onBlur: productCostBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 9\n          }, this), productCostHasErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Product cost cant be 0 or less than 0.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes['button--alt'],\n          onClick: props.onClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formIsValid,\n          className: classes.button,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), notificationObj.component !== '' && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notificationObj.status,\n      title: notificationObj.title,\n      message: notificationObj.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductForm, \"x6xZGZ07Tp/vbBh2hBzxgMT6srI=\", false, function () {\n  return [useSelector, useDispatch, useInput, useInput];\n});\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","Modal","classes","Notification","useDispatch","useSelector","productActions","useInput","isNotEmpty","value","trim","isNotLessThanOrEqualToZero","ProductForm","props","selectedProductId","state","products","notificationObj","setNotificationObj","component","status","title","message","dispatch","productNameValue","isValid","productNameIsValid","hasError","productNameHasError","valueChangeHandler","productNameChangeHandler","inputBlurHandler","productNameBlurHandler","reset","resetProductName","productCostValue","productCostIsValid","productCostHasErrors","productCostChangeHandler","productCostBlurHandler","resetProductCost","formIsValid","UpdateProduct","productObj","token","localStorage","getItem","product","JSON","stringify","response","fetch","method","body","headers","data","json","ok","Error","errorMessage","deleteProduct","product_id","addProduct","onSubmitHandler","event","preventDefault","name","cost","console","log","catch","error","resetSelectedProductId","clearNotificationHandler","productNameClasses","productCostClasses","actions","onClose","button"],"sources":["C:/Users/milos.mihajlovic/source/repos/CASHREGISTER/CashRegister-Frontend/src/components/Product/UpdateProductForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport classes from './ProductForm.module.css';\r\nimport Notification from \"../UI/Notification\";\r\nimport {useDispatch,useSelector} from 'react-redux'\r\nimport { productActions } from \"../../store/productSlice\";\r\nimport useInput from \"../../hooks/use-input\";\r\n\r\n\r\n//validation form input methods\r\nconst isNotEmpty=(value)=>value.trim() !== '';\r\nconst isNotLessThanOrEqualToZero = (value)=>  value > 0\r\n\r\n\r\nconst ProductForm=(props) =>{\r\n  const selectedProductId=useSelector(state=>state.products.selectedProductId)\r\n  const [notificationObj,setNotificationObj]=useState({component:'',status:'',title:'',message:''});\r\n  const dispatch=useDispatch()\r\n\r\n  const {\r\n    value: productNameValue,\r\n    isValid: productNameIsValid,\r\n    hasError: productNameHasError,\r\n    valueChangeHandler: productNameChangeHandler,\r\n    inputBlurHandler: productNameBlurHandler,\r\n    reset: resetProductName,\r\n  } = useInput(isNotEmpty);\r\n  const {\r\n    value:productCostValue,\r\n    isValid:productCostIsValid,\r\n    hasError:productCostHasErrors,\r\n    valueChangeHandler:productCostChangeHandler,\r\n    inputBlurHandler:productCostBlurHandler,\r\n    reset:resetProductCost\r\n  }=useInput(isNotLessThanOrEqualToZero);\r\n\r\n  let formIsValid=false;\r\n  if(productNameIsValid && productCostIsValid){\r\n    formIsValid=true;\r\n  }\r\n  \r\n \r\n  //\r\n  async function UpdateProduct(productObj) {\r\n    const token=localStorage.getItem('token')\r\n    setNotificationObj({component:'UpdateProductForm',status:'pending',title:'Sending',message:'Sending...'})\r\n    const product=JSON.stringify(productObj);\r\n    const response = await fetch('https://localhost:7269/api/Product/UpdateProduct', {\r\n      method: 'PUT',\r\n      body: product,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+token\r\n      }\r\n    });\r\n    const data=await response.json()\r\n    if (!response.ok) {\r\n      throw new Error(data.errorMessage);\r\n    }\r\n    dispatch(productActions.deleteProduct(productObj.product_id))\r\n    dispatch(productActions.addProduct(productObj))\r\n    \r\n    setNotificationObj({component:'UpdateProductForm',status:'success',title:'Success!',message:'Product is successfuly updated'})\r\n  }\r\n\r\n  \r\n  const onSubmitHandler=(event)=>{\r\n    event.preventDefault()\r\n    if (!formIsValid)  {\r\n      return;\r\n    }\r\n    const productObj={product_id:selectedProductId,name:productNameValue,cost:productCostValue};  \r\n    console.log(productObj)\r\n    UpdateProduct(productObj).catch(error=>{\r\n      setNotificationObj({component:'UpdateProductForm',status:'error',title:'Error!',message:error.message})\r\n    })\r\n    //reset inputs to initial\r\n    resetProductName()\r\n    resetProductCost()\r\n    dispatch(productActions.resetSelectedProductId())\r\n  }\r\n  //clear notification\r\n  const clearNotificationHandler=()=>{\r\n    setNotificationObj({component:'',status:'',title:'',message:''})\r\n  }\r\n\r\n  \r\n  //\r\n  const productNameClasses = productNameHasError ? 'form-control invalid' : 'form-control';\r\n  const productCostClasses = productCostHasErrors ? 'form-control invalid' : 'form-control';\r\n  //\r\n  return (\r\n    <Modal>\r\n    \r\n     <form onSubmit={onSubmitHandler} onFocus={clearNotificationHandler}>\r\n      <div>\r\n        <div className={productNameClasses}>\r\n          <label htmlFor='name'>Product Name : </label>\r\n          <input\r\n            type='text'\r\n            id='name'\r\n            value={productNameValue}\r\n            onChange={productNameChangeHandler}\r\n            onBlur={productNameBlurHandler}\r\n          />\r\n          {productNameHasError && <p className=\"error-text\">Please enter a product name.</p>}\r\n        </div>\r\n      \r\n      <div className={productCostClasses}>\r\n        <label htmlFor='cost'>Product cost : </label>\r\n        <input\r\n          type='number'\r\n          id='cost'\r\n          value={productCostValue}\r\n          onChange={productCostChangeHandler}\r\n          onBlur={productCostBlurHandler}\r\n        />\r\n        {productCostHasErrors && <p className=\"error-text\">Product cost cant be 0 or less than 0.</p>}\r\n      </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n        <button disabled={!formIsValid} className={classes.button}>Update</button>\r\n      </div>\r\n    </form>\r\n\r\n\r\n\r\n      <br/>\r\n      {notificationObj.component !== '' && \r\n      <Notification\r\n      status={notificationObj.status}\r\n      title={notificationObj.title}\r\n      message={notificationObj.message}\r\n    />\r\n    }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}