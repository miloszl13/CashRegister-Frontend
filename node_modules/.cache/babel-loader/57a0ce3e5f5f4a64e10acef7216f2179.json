{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos.mihajlovic\\\\source\\\\repos\\\\CASHREGISTER\\\\CashRegister-Frontend-2\\\\CashRegister-Frontend\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport Notification from \"../UI/Notification\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiActions } from \"../../store/uiSlice\";\nimport { productActions } from \"../../store/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction wait(ms) {\n  var start = new Date().getTime();\n  var end = start;\n\n  while (end < start + ms) {\n    end = new Date().getTime();\n  }\n}\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  const productsDb = useSelector(state => state.products.items); //add products to bil method  \n\n  const addProductsToBill = useCallback(async bp => {\n    const token = localStorage.getItem('token');\n    const billProduct = JSON.stringify({\n      bill_number: bp.billNumber,\n      product_id: bp.product_id,\n      product_quantity: bp.product_quantity,\n      products_cost: bp.products_cost\n    });\n    await fetch('https://localhost:7269/api/BillProduct/AddProductToBillProduct', {\n      method: 'POST',\n      body: billProduct,\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + token\n      }\n    });\n  }, []); //method for deleting product\n\n  const deleteProduct = useCallback(async product => {\n    const token = localStorage.getItem('token');\n    const response = await fetch(`https://localhost:7269/api/Product/DeleteProduct/${product}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    const data = await response.json();\n    dispatch(productActions.deleteProduct(data));\n  }, [dispatch]); //method for fetching all products\n\n  const fetchProducts = useCallback(async () => {\n    dispatch(uiActions.showNotification({\n      component: 'AvailableMeals',\n      status: 'pending',\n      title: 'Fetching...',\n      message: 'Fetching Products!'\n    }));\n    const response = await fetch(\"https://localhost:7269/api/Product\");\n    const responseData = await response.json();\n\n    if (!response.ok) {\n      throw new Error();\n    }\n\n    const loadedMeals = [];\n\n    for (const key in responseData) {\n      loadedMeals.push({\n        id: responseData[key].product_id,\n        name: responseData[key].name,\n        price: responseData[key].cost\n      });\n    }\n\n    wait(700);\n    setProducts(loadedMeals);\n    dispatch(uiActions.setNotificationToNull());\n  }, [dispatch]); //runs every time componenet re-render and if productsDb,fetchProducts or dispatch change\n\n  useEffect(() => {\n    fetchProducts().catch(error => {\n      dispatch(uiActions.showNotification({\n        component: 'AvailableMeals',\n        status: 'error',\n        title: 'Error!',\n        message: 'Connection error or product db is empty!'\n      }));\n      setProducts([]);\n    });\n  }, [productsDb, fetchProducts, dispatch]); //list of products from db\n\n  const mealsList = products.map(product => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: product.id,\n    name: product.name,\n    price: product.price,\n    onAddProduct: addProductsToBill,\n    onDeleteProduct: deleteProduct //\n    //\n    //update product\n\n  }, product.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [notification && notification.component === 'AvailableMeals' && /*#__PURE__*/_jsxDEV(Notification, {\n        status: notification.status,\n        title: notification.title,\n        message: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"fr7CYT0nwad7S70O3uGijhNmH/E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useState","useEffect","useCallback","Notification","useSelector","useDispatch","uiActions","productActions","wait","ms","start","Date","getTime","end","AvailableMeals","products","setProducts","dispatch","notification","state","ui","productsDb","items","addProductsToBill","bp","token","localStorage","getItem","billProduct","JSON","stringify","bill_number","billNumber","product_id","product_quantity","products_cost","fetch","method","body","headers","deleteProduct","product","response","data","json","fetchProducts","showNotification","component","status","title","message","responseData","ok","Error","loadedMeals","key","push","id","name","price","cost","setNotificationToNull","catch","error","mealsList","map","meals"],"sources":["C:/Users/milos.mihajlovic/source/repos/CASHREGISTER/CashRegister-Frontend-2/CashRegister-Frontend/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport Notification from \"../UI/Notification\";\r\nimport {useSelector,useDispatch} from 'react-redux'\r\nimport { uiActions } from \"../../store/uiSlice\";\r\nimport { productActions } from \"../../store/productSlice\";\r\n\r\n\r\nfunction wait(ms){\r\n  var start = new Date().getTime();\r\n  var end = start;\r\n  while(end < start + ms) {\r\n    end = new Date().getTime();\r\n }\r\n}\r\n\r\nconst AvailableMeals = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const dispatch=useDispatch();\r\n  const notification=useSelector(state=>state.ui.notification)\r\n  const productsDb=useSelector(state=>state.products.items)\r\n\r\n\r\n  //add products to bil method  \r\n  const addProductsToBill=useCallback(async (bp) => {\r\n    const token = localStorage.getItem('token')\r\n    const billProduct=JSON.stringify({bill_number:bp.billNumber,product_id:bp.product_id,product_quantity:bp.product_quantity,products_cost:bp.products_cost});\r\n   await fetch('https://localhost:7269/api/BillProduct/AddProductToBillProduct', {\r\n      method: 'POST',\r\n      body: billProduct,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer '+token\r\n      }\r\n    });\r\n  },[]);\r\n  \r\n\r\n  //method for deleting product\r\n  const deleteProduct=useCallback(async (product)=> {\r\n    const token=localStorage.getItem('token')\r\n    const response = await fetch(`https://localhost:7269/api/Product/DeleteProduct/${product}`, {\r\n      method: 'DELETE',\r\n      headers:{\r\n        'Authorization': 'Bearer '+token\r\n      }\r\n    });\r\n    const data = await response.json();\r\n    dispatch(productActions.deleteProduct(data))\r\n  },[dispatch]);\r\n\r\n\r\n  //method for fetching all products\r\n  const fetchProducts = useCallback(async () => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        component:'AvailableMeals',\r\n        status: 'pending',\r\n        title: 'Fetching...',\r\n        message: 'Fetching Products!',\r\n      })\r\n    );\r\n    const response = await fetch(\"https://localhost:7269/api/Product\");\r\n    const responseData=await response.json()\r\n    if (!response.ok) {\r\n\r\n      throw new Error();\r\n    }\r\n    const loadedMeals = [];\r\n\r\n    for (const key in responseData) {\r\n      loadedMeals.push({\r\n        id: responseData[key].product_id,\r\n        name: responseData[key].name,\r\n        price: responseData[key].cost,\r\n      });\r\n    }\r\n    wait(700)\r\n    setProducts(loadedMeals);\r\n    dispatch(uiActions.setNotificationToNull())\r\n  }, [dispatch]);\r\n\r\n\r\n  //runs every time componenet re-render and if productsDb,fetchProducts or dispatch change\r\n  useEffect(() => {\r\n    fetchProducts().catch((error) => {\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          component:'AvailableMeals',\r\n          status: 'error',\r\n          title: 'Error!',\r\n          message: 'Connection error or product db is empty!',\r\n        })\r\n      );\r\n      setProducts([])\r\n    });\r\n  }, [productsDb,fetchProducts,dispatch]);\r\n\r\n  \r\n  //list of products from db\r\n  const mealsList = products.map((product) => (\r\n    <MealItem\r\n      key={product.id}\r\n      id={product.id}\r\n      name={product.name}\r\n      price={product.price}\r\n      onAddProduct={addProductsToBill}\r\n      onDeleteProduct={deleteProduct}\r\n      //\r\n      //\r\n      //update product\r\n    />\r\n  ));\r\n  \r\n  \r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n       \r\n        {notification && notification.component==='AvailableMeals' && \r\n          <Notification\r\n            status={notification.status}\r\n            title={notification.title}\r\n            message={notification.message}\r\n          />\r\n        }\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}