{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\milos.mihajlovic\\\\source\\\\repos\\\\CASHREGISTER\\\\CashRegister-Frontend\\\\src\\\\components\\\\Auth\\\\AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport AuthContext from '../../store/auth-context';\nimport classes from './AuthForm.module.css';\nimport { billActions } from '../../store/billSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const usernameInputRef = useRef();\n  const passwordInputRef = useRef();\n  const firstNameInputRef = useRef();\n  const lastNameInputRef = useRef();\n  const roleInputRef = useRef();\n  const [token, setToken] = useState('');\n  const dispatch = useDispatch();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  async function AddNewUser(userObj) {\n    //setNotificationObj({component:'ProductForm',status:'pending',title:'Sending',message:'Sending...'})\n    const user = JSON.stringify(userObj);\n    const response = await fetch('https://localhost:7269/api/User/RegisterUser', {\n      method: 'POST',\n      body: user,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n      console.log(data);\n      throw new Error(data.errorMessage);\n    } //dispatch(productActions.addProduct(productObj))\n    //setNotificationObj({component:'ProductForm',status:'success',title:'Success!',message:'Successfuly created product'})\n\n  }\n\n  async function GetUsersId(username) {\n    const response = await fetch(`https://localhost:7269/api/User/GetUsersId/${username}`);\n    const data = await response.json();\n    console.log(response);\n    console.log(data);\n    dispatch(billActions.setUserId(data));\n  }\n\n  async function Login(userCredsObj) {\n    //setNotificationObj({component:'ProductForm',status:'pending',title:'Sending',message:'Sending...'})\n    const credentials = JSON.stringify(userCredsObj);\n    console.log(credentials);\n    const response = await fetch('https://localhost:7269/api/User/login', {\n      method: 'POST',\n      body: credentials,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    console.log(response);\n    const data = await response.json();\n    setToken(data);\n    console.log(data);\n\n    if (!response.ok) {\n      console.log(data);\n      throw new Error('error');\n    }\n\n    const expirationTime = new Date( //new Date().getTime().addHours(12)\n    new Date().setHours(new Date().getHours() + 8));\n    authCtx.login(data, expirationTime.toISOString());\n    GetUsersId(userCredsObj.username);\n    history.replace('/homepage'); // dispatch(productActions.addProduct(productObj))\n    // setNotificationObj({component:'ProductForm',status:'success',title:'Success!',message:'Successfuly created product'})\n  }\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredUsername = usernameInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    setIsLoading(true); //REGISTER\n    //const enteredFirstName=firstNameInputRef.current.value;\n    //const enteredLastName=lastNameInputRef.current.value;\n    // const enteredRole=roleInputRef.current.value;\n    // const user={firsName:enteredFirstName,lastName:enteredLastName,username:enteredUsername,password:enteredPassword,role:enteredRole}\n    // console.log(user)\n    // AddNewUser(user).catch(error=>{\n    //   console.log('error');\n    // })\n    //LOGIN\n\n    const credentials = {\n      username: enteredUsername,\n      password: enteredPassword\n    };\n    console.log(credentials);\n    Login(credentials);\n    setIsLoading(false); // let url;\n    // if (isLogin) {\n    //   url =\n    //     'https://localhost:7269/api/User/login';\n    // } else {\n    //   url =\n    //     'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBZhsabDexE9BhcJbGxnZ4DiRlrCN9xe24';\n    // }\n    // fetch(url, {\n    //   method: 'POST',\n    //   body: JSON.stringify({\n    //     email: enteredEmail,\n    //     password: enteredPassword,\n    //     returnSecureToken: true,\n    //   }),\n    //   headers: {\n    //     'Content-Type': 'application/json',\n    //   },\n    // })\n    //   .then((res) => {\n    //     setIsLoading(false);\n    //     if (res.ok) {\n    //       return res.json();\n    //     } else {\n    //       return res.json().then((data) => {\n    //         let errorMessage = 'Authentication failed!';\n    //         // if (data && data.error && data.error.message) {\n    //         //   errorMessage = data.error.message;\n    //         // }\n    //         throw new Error(errorMessage);\n    //       });\n    //     }\n    //   })\n    //   .then((data) => {\n    //     const expirationTime = new Date(\n    //       new Date().getTime() + +data.expiresIn * 1000\n    //     );\n    //     authCtx.login(data.idToken, expirationTime.toISOString());\n    //     history.replace('/');\n    //   })\n    //   .catch((err) => {\n    //     alert(err.message);\n    //   });\n  };\n\n  useEffect(() => {\n    console.log('render');\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Register user'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: usernameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fname\",\n            children: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"fname\",\n            ref: firstNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lname\",\n            children: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lname\",\n            ref: lastNameInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.control,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"role\",\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"role\",\n            ref: roleInputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [!isLoading && /*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create User'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Sending request...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Register new user' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"TTLrME7ly1XuYqU2H+CJdNDTVd8=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["useState","useRef","useContext","useEffect","useHistory","useDispatch","AuthContext","classes","billActions","AuthForm","history","usernameInputRef","passwordInputRef","firstNameInputRef","lastNameInputRef","roleInputRef","token","setToken","dispatch","authCtx","isLogin","setIsLogin","isLoading","setIsLoading","AddNewUser","userObj","user","JSON","stringify","response","fetch","method","body","headers","data","json","ok","console","log","Error","errorMessage","GetUsersId","username","setUserId","Login","userCredsObj","credentials","expirationTime","Date","setHours","getHours","login","toISOString","replace","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredUsername","current","value","enteredPassword","password","auth","control","actions","toggle"],"sources":["C:/Users/milos.mihajlovic/source/repos/CASHREGISTER/CashRegister-Frontend/src/components/Auth/AuthForm.js"],"sourcesContent":["import { useState, useRef, useContext, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport AuthContext from '../../store/auth-context';\r\nimport classes from './AuthForm.module.css';\r\nimport { billActions } from '../../store/billSlice';\r\n\r\nconst AuthForm = () => {\r\n  const history = useHistory();\r\n  const usernameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n  const firstNameInputRef = useRef();\r\n  const lastNameInputRef = useRef();\r\n  const roleInputRef=useRef();\r\n  const [token,setToken]=useState('');\r\n  const dispatch=useDispatch()\r\n  \r\n  const authCtx = useContext(AuthContext);\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n\r\n  async function AddNewUser(userObj) {\r\n    //setNotificationObj({component:'ProductForm',status:'pending',title:'Sending',message:'Sending...'})\r\n    const user=JSON.stringify(userObj);\r\n    const response = await fetch('https://localhost:7269/api/User/RegisterUser', {\r\n      method: 'POST',\r\n      body: user,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const data=await response.json()\r\n    if (!response.ok) {\r\n      console.log(data)\r\n      throw new Error(data.errorMessage);\r\n    }\r\n    //dispatch(productActions.addProduct(productObj))\r\n    //setNotificationObj({component:'ProductForm',status:'success',title:'Success!',message:'Successfuly created product'})\r\n  }\r\n  \r\n  async function GetUsersId(username){\r\n    const response = await fetch(`https://localhost:7269/api/User/GetUsersId/${username}`);\r\n    const data = await response.json();\r\n    console.log(response)\r\n    console.log(data);\r\n    dispatch(billActions.setUserId(data))  \r\n  }\r\n\r\n\r\n  async function Login(userCredsObj) {\r\n    //setNotificationObj({component:'ProductForm',status:'pending',title:'Sending',message:'Sending...'})\r\n    const credentials=JSON.stringify(userCredsObj);\r\n    console.log(credentials)\r\n    const response = await fetch('https://localhost:7269/api/User/login', {\r\n      method: 'POST',\r\n      body: credentials,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept':'application/json'\r\n      }\r\n    });\r\n    console.log(response)\r\n    const data=await response.json()\r\n    setToken(data);\r\n    console.log(data)\r\n    if (!response.ok) {\r\n      console.log(data)\r\n      throw new Error('error');\r\n    }\r\n    const expirationTime = new Date(\r\n            //new Date().getTime().addHours(12)\r\n            new Date().setHours(new Date().getHours() + 8)\r\n          )\r\n    authCtx.login(data, expirationTime.toISOString());\r\n    GetUsersId(userCredsObj.username);\r\n                                                    \r\n    history.replace('/homepage');\r\n    \r\n   // dispatch(productActions.addProduct(productObj))\r\n   // setNotificationObj({component:'ProductForm',status:'success',title:'Success!',message:'Successfuly created product'})\r\n  }\r\n\r\n  \r\n\r\n  const switchAuthModeHandler = () => {\r\n    setIsLogin((prevState) => !prevState);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    \r\n    const enteredUsername = usernameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n    \r\n    // optional: Add validation\r\n\r\n    setIsLoading(true);\r\n\r\n    //REGISTER\r\n    //const enteredFirstName=firstNameInputRef.current.value;\r\n    //const enteredLastName=lastNameInputRef.current.value;\r\n   // const enteredRole=roleInputRef.current.value;\r\n    // const user={firsName:enteredFirstName,lastName:enteredLastName,username:enteredUsername,password:enteredPassword,role:enteredRole}\r\n    // console.log(user)\r\n    // AddNewUser(user).catch(error=>{\r\n    //   console.log('error');\r\n    // })\r\n\r\n    //LOGIN\r\n    const credentials={username:enteredUsername,password:enteredPassword}\r\n    console.log(credentials)\r\n    Login(credentials);\r\n\r\n    setIsLoading(false);\r\n    // let url;\r\n    // if (isLogin) {\r\n    //   url =\r\n    //     'https://localhost:7269/api/User/login';\r\n    // } else {\r\n    //   url =\r\n    //     'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBZhsabDexE9BhcJbGxnZ4DiRlrCN9xe24';\r\n    // }\r\n    // fetch(url, {\r\n    //   method: 'POST',\r\n    //   body: JSON.stringify({\r\n    //     email: enteredEmail,\r\n    //     password: enteredPassword,\r\n    //     returnSecureToken: true,\r\n    //   }),\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    // })\r\n    //   .then((res) => {\r\n    //     setIsLoading(false);\r\n    //     if (res.ok) {\r\n    //       return res.json();\r\n    //     } else {\r\n    //       return res.json().then((data) => {\r\n    //         let errorMessage = 'Authentication failed!';\r\n    //         // if (data && data.error && data.error.message) {\r\n    //         //   errorMessage = data.error.message;\r\n    //         // }\r\n\r\n    //         throw new Error(errorMessage);\r\n    //       });\r\n    //     }\r\n    //   })\r\n    //   .then((data) => {\r\n    //     const expirationTime = new Date(\r\n    //       new Date().getTime() + +data.expiresIn * 1000\r\n    //     );\r\n    //     authCtx.login(data.idToken, expirationTime.toISOString());\r\n    //     history.replace('/');\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     alert(err.message);\r\n    //   });\r\n  };\r\nuseEffect(()=>{\r\n  console.log('render')\r\n}) \r\n return (\r\n    <section className={classes.auth}>\r\n      <h1>{isLogin ? 'Login' : 'Register user'}</h1>\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes.control}>\r\n          <label htmlFor='username'>Username</label>\r\n          <input type='text' id='username' ref={usernameInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='password'>Your Password</label>\r\n          <input\r\n            type='password'\r\n            id='password'\r\n            ref={passwordInputRef}\r\n          />\r\n          </div>\r\n          {!isLogin && \r\n          <div>\r\n          <div className={classes.control}>\r\n          <label htmlFor='fname'>First name</label>\r\n          <input type='text' id='fname' ref={firstNameInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n        <label htmlFor='lname'>Last name</label>\r\n        <input type='text' id='lname' ref={lastNameInputRef} />\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor='role'>Role</label>\r\n        <input type='text' id='role' ref={roleInputRef} />\r\n      </div>\r\n      </div>}\r\n        \r\n        <div className={classes.actions}>\r\n          {!isLoading && (\r\n            <button>{isLogin ? 'Login' : 'Create User'}</button>\r\n          )}\r\n          {isLoading && <p>Sending request...</p>}\r\n          <button\r\n            type='button'\r\n            className={classes.toggle}\r\n            onClick={switchAuthModeHandler}\r\n          >\r\n            {isLogin ? 'Register new user' : 'Login with existing account'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AuthForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}