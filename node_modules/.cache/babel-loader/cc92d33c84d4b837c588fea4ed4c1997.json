{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst productSlice = createSlice({\n  name: 'products',\n  initialState: {\n    items: []\n  },\n  reducers: {\n    replaceProducts(state, action) {\n      state.items = action.payload.items;\n    } //     resetToInitial(state){\n    //       state.items=[];\n    //       state.totalAmount=0;\n    //       state.totalBillPrice=0;\n    //       state.billNumber='a';\n    //       state.creditCard='';\n    //     },\n    //     createBill(state,action){\n    //       const billNum=action.payload;\n    //       state.billNumber=billNum;\n    //     },\n    //     setCreditCard(state,action){\n    //       state.creditCard=action.payload\n    //     },\n    //     addItemToCart(state, action) {\n    //       const newItem = action.payload;\n    //       const existingItem = state.items.find((item) => item.id === newItem.id);\n    //       state.totalAmount++;\n    //       if (!existingItem) {\n    //         state.items.push({\n    //           id: newItem.id,\n    //           price: newItem.price,\n    //           quantity: newItem.amount,\n    //           totalPrice: newItem.price,\n    //           name: newItem.name,\n    //         });\n    //         state.totalBillPrice=state.totalBillPrice+(newItem.price*newItem.amount);\n    //       } else {\n    //         existingItem.quantity++;\n    //         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n    //         state.totalBillPrice=state.totalBillPrice+newItem.price;\n    //       }\n    //     },\n    //     removeItemFromCart(state, action) {\n    //       const id = action.payload;\n    //       const existingItem = state.items.find((item) => item.id === id);\n    //       state.totalAmount--;\n    //       if (existingItem.quantity === 1) {\n    //         state.items = state.items.filter((item) => item.id !== id);\n    //       } else {\n    //         existingItem.quantity--;\n    //       }\n    //       state.totalBillPrice=state.totalBillPrice-existingItem.price;\n    //     },\n    //   },\n\n\n  }\n});\nexport const productActions = productSlice.actions;\nexport default productSlice;","map":{"version":3,"names":["createSlice","productSlice","name","initialState","items","reducers","replaceProducts","state","action","payload","productActions","actions"],"sources":["C:/Users/milos.mihajlovic/source/repos/CASHREGISTER/CashRegister-Frontend/src/store/productSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst productSlice=createSlice({\r\n    name:'products',\r\n    initialState:{\r\n        items: [],\r\n    },\r\nreducers: {\r\n    replaceProducts(state,action){\r\n        state.items=action.payload.items;\r\n    }\r\n//     resetToInitial(state){\r\n//       state.items=[];\r\n//       state.totalAmount=0;\r\n//       state.totalBillPrice=0;\r\n//       state.billNumber='a';\r\n//       state.creditCard='';\r\n//     },\r\n//     createBill(state,action){\r\n//       const billNum=action.payload;\r\n//       state.billNumber=billNum;\r\n//     },\r\n//     setCreditCard(state,action){\r\n//       state.creditCard=action.payload\r\n//     },\r\n//     addItemToCart(state, action) {\r\n//       const newItem = action.payload;\r\n//       const existingItem = state.items.find((item) => item.id === newItem.id);\r\n//       state.totalAmount++;\r\n//       if (!existingItem) {\r\n//         state.items.push({\r\n//           id: newItem.id,\r\n//           price: newItem.price,\r\n//           quantity: newItem.amount,\r\n//           totalPrice: newItem.price,\r\n//           name: newItem.name,\r\n//         });\r\n//         state.totalBillPrice=state.totalBillPrice+(newItem.price*newItem.amount);\r\n//       } else {\r\n//         existingItem.quantity++;\r\n//         existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n//         state.totalBillPrice=state.totalBillPrice+newItem.price;\r\n//       }\r\n//     },\r\n//     removeItemFromCart(state, action) {\r\n//       const id = action.payload;\r\n//       const existingItem = state.items.find((item) => item.id === id);\r\n//       state.totalAmount--;\r\n//       if (existingItem.quantity === 1) {\r\n//         state.items = state.items.filter((item) => item.id !== id);\r\n//       } else {\r\n//         existingItem.quantity--;\r\n//       }\r\n//       state.totalBillPrice=state.totalBillPrice-existingItem.price;\r\n//     },\r\n//   },\r\n}\r\n})\r\n\r\nexport const productActions = productSlice.actions;\r\n\r\nexport default productSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAACD,WAAW,CAAC;EAC3BE,IAAI,EAAC,UADsB;EAE3BC,YAAY,EAAC;IACTC,KAAK,EAAE;EADE,CAFc;EAK/BC,QAAQ,EAAE;IACNC,eAAe,CAACC,KAAD,EAAOC,MAAP,EAAc;MACzBD,KAAK,CAACH,KAAN,GAAYI,MAAM,CAACC,OAAP,CAAeL,KAA3B;IACH,CAHK,CAIV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;;EAhDU;AALqB,CAAD,CAA9B;AAyDA,OAAO,MAAMM,cAAc,GAAGT,YAAY,CAACU,OAApC;AAEP,eAAeV,YAAf"},"metadata":{},"sourceType":"module"}